@using eEvento.Models
@model LoginViewModel
@{
    ViewBag.Title = "Login";
}

<div class="container-fluid d-flex align-items-center justify-content-center">
    <div class="row w-100 d-flex justify-content-center align-items-center">

        <!-- Coluna para o nome e descrição -->
        <div class="col-md-6 d-flex flex-column justify-content-center align-items-start text-center text-md-start mb-4 mb-md-0">
            <h1 class="text-primary display-5">e-Evento</h1>
            <p class="lead">Um sistema completo para gerenciamento de eventos.</p>
        </div>

        <!-- Coluna para o formulário de login -->
        <div class="col-md-5">
            <main class="d-flex justify-content-center align-items-center">
                <div class="card shadow-lg p-4" style="width: 100%; max-width: 450px; border-radius: 10px;">
                    <div class="card-body text-center">
                        <h2 class="text-primary mb-3">@ViewBag.Title</h2>
                        <h5 class="text-muted mb-4">Use sua conta para fazer o login</h5>

                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger text-start" })

                            <!-- Campo de Email -->
                            <div class="mb-3 text-center">
                               
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg mx-auto", style = "max-width: 100%;", placeholder = "Email" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>

                            <!-- Campo de Senha -->
                            <div class="mb-3 text-center">
                               
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-lg mx-auto", style = "max-width: 100%;", placeholder = "Senha" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>

                            <!-- Checkbox de lembrar login -->
                            <div class="mb-3 text-start">
                                <div class="form-check">
                                    @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input" })
                                    @Html.LabelFor(m => m.RememberMe, new { @class = "form-check-label" })
                                </div>
                            </div>

                            <div class="d-grid mt-4">
                                <button type="submit" class="btn btn-primary btn-lg">Entrar</button>
                            </div>

                            <p class="text-center text-muted mt-3">
                                @Html.ActionLink("Registre-se como um novo usuário", "Register", null, new { @class = "text-decoration-none text-primary fw-bold" })
                            </p>
                        }

                        <hr class="my-4" />
                        <h5 class="text-muted">Ou faça login com:</h5>

                        <div id="socialLoginList" class="mt-3">
                            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
